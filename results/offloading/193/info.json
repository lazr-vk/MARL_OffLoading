{
  "advantage_mean": [
    0.008087440773292823
  ],
  "advantage_mean_T": [
    27
  ],
  "agent_grad_norm": [
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADE3NjMwNTEyMjE0ODhxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWA0AAAAxNzYzMDUxMjIxNDg4cQFhLgEAAAAAAAAAFUtwQQ=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            false,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "agent_grad_norm_T": [
    27
  ],
  "coma_loss": [
    0.21416743099689484
  ],
  "coma_loss_T": [
    27
  ],
  "critic_grad_norm": [
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADE3NjMwNTEyMTc5MDRxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWA0AAAAxNzYzMDUxMjE3OTA0cQFhLgEAAAAAAAAAoJC1RQ=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            false,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "critic_grad_norm_T": [
    27
  ],
  "critic_loss": [
    208.18638858795165
  ],
  "critic_loss_T": [
    27
  ],
  "ep_length_mean": [
    20.0
  ],
  "ep_length_mean_T": [
    20
  ],
  "episode": [
    1
  ],
  "episode_T": [
    20
  ],
  "epsilon": [
    0.5
  ],
  "epsilon_T": [
    20
  ],
  "pi_max": [
    0.18448898527357313
  ],
  "pi_max_T": [
    27
  ],
  "q_taken_mean": [
    0.6319606564939022
  ],
  "q_taken_mean_T": [
    27
  ],
  "return_mean": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 9.154045767955711
    }
  ],
  "return_mean_T": [
    20
  ],
  "return_std": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.0
    }
  ],
  "return_std_T": [
    20
  ],
  "step_mean": [
    20.0
  ],
  "step_mean_T": [
    20
  ],
  "target_mean": [
    1.3683155089616776
  ],
  "target_mean_T": [
    27
  ],
  "td_error_abs": [
    9.948974370956421
  ],
  "td_error_abs_T": [
    27
  ],
  "test_ep_length_mean": [
    1.0
  ],
  "test_ep_length_mean_T": [
    20
  ],
  "test_return_mean": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.46521459071196936
    }
  ],
  "test_return_mean_T": [
    20
  ],
  "test_return_std": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.28822652808409893
    }
  ],
  "test_return_std_T": [
    20
  ],
  "test_step_mean": [
    36.5
  ],
  "test_step_mean_T": [
    20
  ]
}